% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forecast.R
\name{forecast.WrappedModel}
\alias{forecast.WrappedModel}
\title{Forecast a trained learner.}
\usage{
\method{forecast}{WrappedModel}(object, newdata = NULL, task, h = 10, ...)
}
\arguments{
\item{object}{[\code{\link{WrappedModel}}]\cr
Wrapped model, result of \code{\link{train}}.}

\item{newdata}{[\code{data.frame}]\cr
Optional: A data frame of external regressors which must have the same number of rows as your forecast length h}

\item{task}{[\code{\link{Task}}]\cr
The task. This is only used for fcregr and mfcregr, in which it's used to gather date information}

\item{h}{[\code{integer(1)}]
An integer specifying the forecast horizon}

\item{...}{[any]\cr
Currently ignored.}
}
\value{
[\code{\link{Prediction}}].
}
\description{
Forecast the target variable of new data using a fitted model.
What is stored exactly in the [\code{\link{Prediction}}] object depends
on the \code{predict.type} setting of the \code{\link{Learner}}.
If \code{predict.type} was set to \dQuote{prob} probability thresholding
can be done calling the \code{\link{setThreshold}} function on the
prediction object.

The row names of the input \code{task} or \code{newdata} are preserved in the output.
}
\examples{
# train and forecast
dat  = arima.sim(model = list(ar = c(.8,.1), ma = c(.4), order = c(2,0,1)), n = 300)
jump = data.frame(jump = ifelse(diff(dat) > .5, "up","down"))
times = (as.POSIXct("1992-01-14")) + lubridate::days(1:299)
rownames(jump) = times

classif.task = makeClassifTask(data = jump,target = "jump")
classif.task = createLagDiffFeatures(classif.task, lag = 1L:15L,
                                     na.pad = FALSE)
classif.learn = makeLearner("classif.ada")
classif.train = train(classif.learn,classif.task)
forecast(classif.train, h = 10)

# predict now probabiliies instead of class labels
lrn = makeLearner("classif.lda", predict.type = "prob")
model = train(lrn, classif.task)
f = forecast(model, h = 10)
print(f)
getPredictionProbabilities(f)
}
\seealso{
Other predict: \code{\link{asROCRPrediction}},
  \code{\link{getPredictionProbabilities}},
  \code{\link{getPredictionResponse}},
  \code{\link{plotViperCharts}},
  \code{\link{predict.WrappedModel}},
  \code{\link{setPredictThreshold}},
  \code{\link{setPredictType}}
}

